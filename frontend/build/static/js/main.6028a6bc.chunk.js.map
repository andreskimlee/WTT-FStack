{"version":3,"sources":["config/keys.js","config/keys_prod.js","util/route_util.jsx","util/session_api_util.js","actions/session_actions.js","components/sessions/signup_form.jsx","components/sessions/signup_form_container.jsx","components/sessions/session_page.jsx","components/sessions/login_form.jsx","components/sessions/login_form_container.jsx","components/mainpage/portfolio.jsx","actions/transaction_action.js","util/trans_util.js","components/mainpage/portfolio_container.jsx","components/mainpage/stock_graph.jsx","components/mainpage/stock_graph_container.jsx","components/mainpage/cash.jsx","actions/user_actions.js","util/users_util.js","components/mainpage/cash_container.jsx","components/mainpage/navbar.jsx","components/mainpage/navbar_container.jsx","components/mainpage/mainpage.jsx","components/mainpage/mainpage_container.jsx","components/mainpage/transactions.jsx","components/mainpage/transactions_container.jsx","components/app.js","components/root.js","reducers/session_reducer.js","reducers/session_errors_reducer.js","reducers/transaction_errors_reducer.js","reducers/errors_reducer.js","reducers/users_reducer.js","reducers/transactions_reducer.js","reducers/entities_reducer.js","reducers/root_reducer.js","store/store.js","index.js","assets/signin_wallpaper.png"],"names":["module","exports","require","mongoURI","process","MONGO_URI","secretOrKey","SECRET_OR_KEY","IEXAPIKey","IEX_API_KEY","IEXSandBoxKey","IEX_SAND_BOX_KEY","msp","state","loggedIn","session","isAuthenticated","AuthRoute","withRouter","connect","Component","component","path","exact","render","props","to","ProtectedRoute","rest","setAuthToken","token","axios","defaults","headers","common","receiveErrors","errors","type","logout","dispatch","localStorage","removeItem","APIUtil","signup","user","post","then","err","response","data","login","res","setItem","decoded","jwt_decode","currentUser","catch","SignupForm","email","password","password2","name","handleSubmit","bind","clearedErrors","nextProps","signedIn","this","history","push","setState","field","e","currentTarget","value","preventDefault","Object","keys","map","error","i","key","className","src","Wallpaper","alt","onSubmit","onChange","update","renderErrors","React","isSignedIn","SessionPage","LoginForm","handleDemoLogin","placeholder","Key","COLORS","RADIAN","Math","PI","Counter","renderActiveShape","cx","cy","innerRadius","outerRadius","startAngle","endAngle","fill","label","renderCustomizedLabel","midAngle","percent","radius","index","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","Portfolio","allTransactions","livePrices","aggregatedStocks","activeIndex","fetchAllTrans","id","transactions","price","sign","pieces","parseFloat","split","ii","length","splice","join","prevProps","arr","values","fetch","json","res2","payload","symbol","totalVal","portfolioContent","emptyOrTrue","portfolioStocks","forEach","stock","count","stock_count","amount","findMultipleCompanies","idx","color","currPrice","companyName","direction","pricePurchased","quote","latestPrice","shares","Profit","currVal","funds","moneyFormat","width","height","activeShape","labelLine","dataKey","onMouseEnter","onPieEnter","entry","content","renderTooltip","createTransaction","userId","transaction","receiveTrans","get","receiveAllTrans","ownProps","entities","StockGraph","originalPrice","Qty","calculator","activePayload","lastNotNullPrice","stockInfo","high","date","time","Date","minute","toLocaleTimeString","stockCount","transactionType","target","renderStockInfo","duration","format","margin","top","right","left","bottom","onMouseMove","handleMouseMove","onMouseLeave","handleMouseLeave","allowDataOverflow","domain","hide","position","connectNulls","dot","stroke","strokeWidth","onFocus","handleFocus","onBlur","handleChange","onClick","buyStock","Cash","search","val","a","result","findCompany","company","getCompanyName","searchTerm","handleClick","fetchUser","companyInfo","searchResult","receiveUser","users","NavBar","MainPage","TransactionPage","transaction_type","toUpperCase","App","SignUp","SignIn","Root","store","getState","initialState","SessionReducer","action","freeze","undefined","_nullErrors","SessionErrorsReducer","TransactionErrorsReducer","ErrorsReducer","combineReducers","UsersReducer","merge","TransactionReducer","EntitiesReducer","TransactionsReducer","RootReducer","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","document","addEventListener","jwtToken","decodedUser","currentTime","now","exp","window","location","href","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.6028a6bc.chunk.js","sourcesContent":["module.exports = require('./keys_prod')","module.exports = {\n    mongoURI: process.env.MONGO_URI,\n    secretOrKey: process.env.SECRET_OR_KEY,\n    IEXAPIKey: process.env.IEX_API_KEY,\n    IEXSandBoxKey: process.env.IEX_SAND_BOX_KEY\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n// Route takes in a component, a path, props, and a redirect\n// we take in props (inline and from msp/mdp)\n// destructure props to set component we want to render in first half of turnary(not logged in),\n// set path, set loggedIn bool, and set exact path (which we arent using right now)\n\n// for auth route, if we are NOT logged in, we render component,\n// and if we ARE logged in, we redirect to user-splash (\"/\")\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to=\"/\" />\n      )\n  )} />\n);\n\n// if we are logged in we render component passed in, if we are NOT,\n// we redirect to login page\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n          <Redirect to=\"/signin\" />\n        )\n    }\n  />\n);\n\nconst msp = state => (\n  { loggedIn: state.session.isAuthenticated }\n);\n\n// withRouter gives Auth component access to this.props.history\nexport const AuthRoute = withRouter(connect(msp)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(msp)(Protected));","import axios from 'axios';\n\nexport const setAuthToken = token => {\n  if(token){\n    axios.defaults.headers.common['Authorization'] = token;\n  }else{\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const signup = (user) => {\n  return axios.post('/api/users/register', user); \n};\n\nexport const login = (user) => {\n  return axios.post('/api/users/login', user);\n};","import * as APIUtil from '../util/session_api_util.js';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\n\nexport const RECEIVE_CURRENT_USER = 'RECEIVE_CURRENT_USER';\n\nexport const RECEIVE_SESSION_ERRORS = 'RECEIVE_SESSION_ERRORS';\n\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\n\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\n\n\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  APIUtil.setAuthToken(false);\n  dispatch(logoutUser());\n};\n\nexport const signup = user => dispatch => (\n  APIUtil.signup(user).then(() => (\n    dispatch(receiveUserSignIn())\n  ), err => (\n    dispatch(receiveErrors(err.response.data))\n  ))\n);\n\nexport const login = user => dispatch => (\n  APIUtil.login(user).then(res => {\n    const { token } = res.data;\n    localStorage.setItem('jwtToken', token);\n    APIUtil.setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded));\n  }).catch(\n    err => {\n      dispatch(receiveErrors(err.response.data));\n    }\n  )\n);","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Wallpaper from '../../assets/signin_wallpaper.png'\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      password2: '',\n      name: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.signedIn === true) {\n      this.props.history.push('/');\n    }\n\n    this.setState({ errors: nextProps.errors });\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      name: this.state.name\n    };\n\n    this.props.signup(user);\n  }\n\n  renderErrors() {\n    return (\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"splash-form-container\">\n        <img className=\"wallpaper\" src={Wallpaper} alt=\"session-wallpaper\" />\n        <div className=\"session-outer\">\n          <h2>Welcome To PiperHood!</h2>\n          {/* <Link to=\"/splash\">\n          <button>Log In</button>\n        </Link> */}\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"session-form\">\n              <p>Full Name</p>\n              <input type=\"text\"\n                value={this.state.name}\n                onChange={this.update('name')}\n                className=\"field-inputs\"\n              />\n              <br />\n              <p>Email</p>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                className=\"field-inputs\"\n              />\n              <br />\n              <p>Password</p>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                className=\"field-inputs\"\n              />\n              <br />\n              <p>Confirm Password</p>\n              <input type=\"password\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                className=\"field-inputs\"\n\n              />\n              <br />\n              <input type=\"submit\" value=\"Sign Up\" className=\"Sign-up-button\" />\n              <div className=\"error-list\">\n                {this.renderErrors()}\n              </div>\n            </div>\n          </form>\n          <div className=\"switch-form-link\">\n            <br />\n            <p>Already have an account? <Link className=\"sign-in-link\" to=\"/signin\">Sign in</Link></p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","import { connect } from 'react-redux';\nimport { signup } from '../../actions/session_actions';\nimport SignupForm from './signup_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    signedIn: state.session.isSignedIn,\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: user => dispatch(signup(user))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm);","import React from 'react';\nimport SignUpContainer from './signup_form_container';\n\nclass SessionPage extends React.Component {\n\n    render() {\n        return (\n            <div className='session-page'>\n                <SignUpContainer></SignUpContainer>\n            </div>\n        )\n    }\n}\n\nexport default SessionPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Wallpaper from '../../assets/signin_wallpaper.png'\n\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n    this.handleDemoLogin = this.handleDemoLogin.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/');\n    }\n    this.setState({ errors: nextProps.errors });\n  }\n\n  renderErrors() {\n    return (\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  update(field) {\n    return e => this.setState({ [field]: e.currentTarget.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.login(user);\n  }\n\n  handleDemoLogin(e) {\n    e.preventDefault();\n\n    let user = {\n      email: 'andreskimlee@gmail.com',\n      password: 'Hiremepls'\n    };\n    this.props.login(user);\n  }\n\n  render() {\n    return (\n      <div className=\"splash-form-container\">\n        <img className=\"wallpaper\" src={Wallpaper} alt=\"session-wallpaper\" />\n        <div className=\"session-outer\">\n          <h2>Welcome Back To PiperHood!</h2>\n          {/* <Link to=\"/splash/signup\">\n          <button>Signup</button>\n        </Link> */}\n          <form className=\"session-form\" onSubmit={this.handleSubmit}>\n            <p>Email</p>\n            <input\n\n              type=\"text\"\n              value={this.state.email}\n              onChange={this.update(\"email\")}\n              className=\"field-inputs\"\n            />\n            <br />\n            <p>Password</p>\n            <input\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.update(\"password\")}\n              placeholder=\"Password\"\n              className=\"field-inputs\"\n            />\n            <br />\n            <input type=\"submit\" className=\"login-button\" value=\"Log in\" />\n            <div className=\"error-list\">\n              {this.renderErrors()}\n            </div>\n          </form>\n          <form className=\"demo-user-form\" onSubmit={this.handleDemoLogin}>\n            <input className=\"demo-login-button\" type=\"submit\" value=\"Log in as Demo User\" />\n          </form>\n          <div className=\"switch-form-link\">\n            {\" \"}\n            Don't have an account? <Link className=\"signup-text\" to=\"/signup\">Sign up</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;","import { connect } from 'react-redux';\nimport { login } from '../../actions/session_actions';\nimport LoginForm from './login_form';\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors.session\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: user => dispatch(login(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import React from 'react';\nimport { PieChart, Pie, Sector, Cell, Tooltip } from 'recharts'\nconst Key = require('../../config/keys')\n\nconst COLORS = [\"#17b3c1\", \"#47d6b6\", \"#bff8d4\", \"#2794eb\"]\nconst RADIAN = Math.PI / 180;\nlet Counter = 0;\n\nconst renderActiveShape = (props) => {\n    const { cx, cy, innerRadius, outerRadius, startAngle, endAngle,\n        fill } = props;\n\n    return (\n        <g>\n            <Sector\n                cx={cx}\n                cy={cy}\n                innerRadius={innerRadius}\n                outerRadius={outerRadius + 15}\n                startAngle={startAngle}\n                endAngle={endAngle}\n                fill={fill}\n                label={renderCustomizedLabel}\n            />\n        </g>\n    );\n};\n\nconst renderCustomizedLabel = ({\n    cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\n\n\nclass Portfolio extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allTransactions: null,\n            livePrices: null,\n            aggregatedStocks: null,\n            activeIndex: null,\n        }\n\n    }\n\n    componentDidMount() {\n        this.props.fetchAllTrans(this.props.currentUser.id).then(() => {\n            this.setState({ allTransactions: this.props.transactions })\n        })\n    }\n\n    moneyFormat(price, sign = '$') { // formats the user's available funds. \n        const pieces = parseFloat(price).toFixed(2).split('')\n        let ii = pieces.length - 3\n        while ((ii -= 3) > 0) {\n            pieces.splice(ii, 0, ',')\n        }\n        return sign + pieces.join('')\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.transactions.length !== this.props.transactions.length) {\n            this.setState({ allTransactions: this.props.transactions })\n        }\n    }\n\n    onPieEnter(data, index) {\n        this.setState({\n            activeIndex: index,\n        });\n    }\n\n    // this function returns the quotes for all stocks in your portfolio in a batch call in order to get \n    // latest stock prices. \n    async findMultipleCompanies(arr) {\n        if (this.state.livePrices === null || arr.length !== Object.values(this.state.livePrices).length) {\n            arr = arr.join(\",\")\n            const res = await fetch(`https://cloud.iexapis.com/v1/stock/market/batch?types=quote&symbols=${arr}&range=5y%20&token=${Key.IEXAPIKey}`)\n            const res2 = await res.json()\n            if (!res2.error) {\n                this.setState({ livePrices: res2 })\n            }\n        }\n\n    }\n\n    renderTooltip({ payload }) {\n\n        if (payload.length > 0) {\n\n            return (\n                <div className=\"graph-tooltip-cont\">\n                    <div className=\"tooltip-symbol\">{payload[0].payload.symbol}</div>\n                    <div>{((payload[0].payload.totalVal / Counter) * 100).toFixed(2) + \"%\"}</div>\n                </div>\n            )\n        }\n\n    }\n    render() {\n        let aggregatedStocks = {}\n        let data = []\n        let portfolioContent;\n        let emptyOrTrue;\n        if (this.state.allTransactions !== null) {\n            this.state.allTransactions.forEach(stock => {\n                if (!aggregatedStocks[stock.symbol]) {\n                    aggregatedStocks[stock.symbol] = {\n                        count: stock.stock_count,\n                        amount: stock.amount\n                    }\n                } else {\n                    aggregatedStocks[stock.symbol].count += stock.stock_count\n                    aggregatedStocks[stock.symbol].amount += stock.amount\n                }\n            })\n        } else return null;\n        // instead of sending the symbol, send an array to the function and return the live prices of all companies\n        // and use batch for IEX API.\n        let portfolioStocks;\n        if (Object.values(aggregatedStocks).length >= 1) {\n            portfolioStocks = Object.keys(aggregatedStocks)\n            this.findMultipleCompanies(portfolioStocks)\n        }\n        Counter = 0\n\n        if (this.state.livePrices && Object.keys(this.state.livePrices).length === Object.keys(aggregatedStocks).length) {\n            portfolioContent = portfolioStocks.map((symbol, idx) => {\n                let color;\n                let currPrice;\n                // let openPrice;\n                let companyName;\n                let direction;\n                let pricePurchased = aggregatedStocks[symbol].amount\n                currPrice = this.state.livePrices[symbol].quote.latestPrice\n                // openPrice = this.state.livePrices[symbol].quote.open\n                companyName = this.state.livePrices[symbol].quote.companyName\n                let shares = aggregatedStocks[symbol].count\n                let Profit = (shares * currPrice) - pricePurchased\n                let currVal = (currPrice * shares)\n                Counter += currVal\n                if (Profit < 0) {\n                    color = 'red'\n                    direction = \"down\"\n                } else if (Profit > 0) {\n                    color = 'green'\n                    direction = \"up\"\n                } else if (Profit === 0) {\n                    color = 'grey'\n                    direction = 'right'\n                }\n\n                data.push({ totalVal: currVal, symbol: symbol })\n                return (\n                    <div key={idx} className=\"portfolio-stock-info-cont\">\n                        <div className={`currPrice-${color}`}>{symbol}</div>\n                        <div className=\"company-name-port\">{companyName}</div>\n                        <div>{shares}</div>\n                        <div className={`currPrice-${color}`}>\n                            ${(currPrice * shares).toFixed(2)}\n                            <div className=\"price-direction\">\n                                <div>({Profit.toFixed(2)})</div>\n                                <div className={`arrow-${direction}`}></div>\n                            </div>\n                        </div>\n\n                    </div>\n                )\n            })\n        } else {\n            this.findMultipleCompanies(Object.keys(aggregatedStocks))\n        }\n        if (this.props.currentUser.funds !== 5000) {\n            emptyOrTrue = <div className=\"column-names-cont\">\n                <div>symbol</div>\n                <div>company</div>\n                <div>shares</div>\n                <div>value</div>\n            </div>\n        } else {\n            emptyOrTrue = <div className=\"no-stocks-text\">You Currently Own No Stocks</div>\n        }\n        return (\n            <div className=\"portfolio-container\">\n                <div className=\"port-val-total-text\">Portfolio (<div className=\"money-counter\">{this.moneyFormat(Counter)}</div>)</div>\n                <div className=\"port-2-cont\">\n                    <PieChart width={720} height={360}>\n                        <Pie\n                            activeIndex={this.state.activeIndex}\n                            activeShape={renderActiveShape}\n                            data={data}\n                            labelLine={false}\n                            cx={360}\n                            cy={150}\n                            innerRadius={110}\n                            outerRadius={140}\n\n                            dataKey=\"totalVal\"\n                            onMouseEnter={this.onPieEnter.bind(this)}\n                        >\n                            {\n                                data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                            }\n\n                        </Pie>\n                        <Tooltip content={this.renderTooltip.bind(this)} />\n                    </PieChart>\n                    {emptyOrTrue}\n                    <div>{portfolioContent}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Portfolio;","import * as APIUtil from '../util/trans_util'\n\nexport const RECEIVE_TRANSACTION = \"RECEIVE_TRANSACTION\";\nexport const RECEIVE_TRANSACTION_ERRORS = \"RECEIVE_TRANSACTION_ERRORS\";\nexport const RECEIVE_TRANSACTIONS = \"RECEIVE_TRANSACTIONS\"\n\nconst receiveTrans = (transaction) => {\n    return {\n        type: RECEIVE_TRANSACTION,\n        transaction,\n    }\n}\n\nconst receiveTransErrors = (errors) => {\n    return {\n        type: RECEIVE_TRANSACTION_ERRORS,\n        errors\n    }\n}\n\nconst receiveAllTrans = (transactions) => {\n    return {\n        type: RECEIVE_TRANSACTIONS,\n        transactions\n    }\n}\n\nexport const createTransaction = (userId) => dispatch => (\n    APIUtil.createTrans(userId)\n        .then(transaction => dispatch(receiveTrans(transaction)), err => (dispatch(receiveTransErrors(err.response.data))))\n);\n\n// export const signup = user => dispatch => (\n//     APIUtil.signup(user).then(() => (\n//       dispatch(receiveUserSignIn())\n//     ), err => (\n//       dispatch(receiveErrors(err.response.data))\n//     ))\n//   );\n\n\n\nexport const fetchAllTrans = (userId) => dispatch => (\n    APIUtil.fetchAllTrans(userId).then(transactions => dispatch(receiveAllTrans(transactions)))\n);","import axios from \"axios\";\n\n\nexport const createTrans = (transaction) => {\n    return axios.post(`/api/transactions`, transaction);\n};\n\nexport const fetchAllTrans = (userId) => {\n    return axios.get(`/api/transactions/${userId}`)\n}","import { connect } from 'react-redux';\nimport Portfolio from './portfolio';\nimport { withRouter } from 'react-router-dom'\nimport { fetchAllTrans } from '../../actions/transaction_action'\n\nconst msp = (state, ownProps) => {\n\n    return {\n        currentUser: state.session.user,\n        transactions: Object.values(state.entities.transactions)\n    };\n};\n\nconst mdp = dispatch => ({\n    fetchAllTrans: userId => dispatch(fetchAllTrans(userId))\n});\n\nexport default withRouter(connect(msp, mdp)(Portfolio));\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts'\nimport Odometer from 'react-odometerjs'\n\nclass StockGraph extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            price: this.props.currPrice,\n            originalPrice: this.props.currPrice,\n            Qty: \"\",\n            symbol: this.props.symbol,\n            calculator: 'hide',\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.currPrice !== this.props.currPrice) {\n            this.setState({ price: this.props.currPrice, originalPrice: this.props.currPrice, symbol: this.props.symbol })\n        }\n    }\n\n\n    handleMouseMove(e) {\n        if (e.activePayload) {\n            this.setState({ price: e.activePayload[0].payload.price })\n        }\n    }\n\n    handleFocus(e) {\n        if (e.type === 'focus') {\n            this.setState({ calculator: \"show\" })\n        } else if (e.type === 'blur') {\n            this.setState({ calculator: 'hide' })\n        }\n    }\n\n    handleMouseLeave() {\n        this.setState({ price: this.state.originalPrice })\n    }\n\n    renderStockInfo() {\n        let lastNotNullPrice;\n        let stockInfo;\n        if (this.props.data) {\n            stockInfo = this.props.data.map((stock, idx) => {\n                if (stock.high !== null) {\n                    lastNotNullPrice = stock.high\n                } else {\n                    stock.high = lastNotNullPrice;\n                };\n                return {\n                    date: stock.date,\n                    time: new Date(`${stock.date}T${stock.minute}:00`).toLocaleTimeString().split(\" \")[0],\n                    price: stock.high,\n                    idx: idx,\n                }\n            }\n            )\n        };\n        return stockInfo;\n    }\n\n    buyStock() {\n        let transaction = {\n            user: this.props.currentUser,\n            amount: this.state.originalPrice,\n            stockCount: this.state.Qty,\n            transactionType: \"buy\",\n            symbol: this.state.symbol\n        }\n\n        this.props.createTransaction(transaction)\n    }\n\n    handleChange(e) {\n        this.setState({ Qty: e.target.value })\n    }\n\n    render() {\n        let errors;\n        if (Object.keys(this.props.errors).length > 0) {\n\n            Object.keys(this.props.errors).forEach(key => {\n                errors = this.props.errors[key]\n            })\n\n        }\n        const stockInfo = this.renderStockInfo()\n        return (\n            <div>\n                <div className=\"stock-price-odometer\">$<Odometer value={(this.state.price)} duration={300} format='(,ddd).dd' /></div>\n                <div className=\"percent-odo\">\n                    <div className=\"graph-change\">$<Odometer value={(this.state.originalPrice - this.state.price).toFixed(2)} /></div>\n                    <div> [ <Odometer value={(((this.state.originalPrice - this.state.price) / this.state.originalPrice) * 100).toFixed(2)} /> % ] </div>\n                </div>\n                <div className=\"day-text\">30 Day History</div>\n                <div className=\"graph-container\">\n                    <ResponsiveContainer >\n                        <LineChart data={stockInfo}\n                            margin={{ top: 20, right: 0, left: 0, bottom: 0 }}\n                            onMouseMove={this.handleMouseMove.bind(this)}\n                            onMouseLeave={this.handleMouseLeave.bind(this)}\n\n                            height={300}>\n\n                            <XAxis dataKey=\"date\"\n                                allowDataOverflow={false}\n\n                            />\n                            <YAxis type=\"number\"\n                                dataKey=\"price\"\n                                domain={300}\n                                hide={true}\n                            />\n                            <Tooltip position={{ y: 1 }}\n\n                            />\n                            <Line type=\"linear\"\n                                connectNulls={true}\n                                dot={false}\n                                dataKey=\"price\"\n                                stroke=\"#20ce9a\"\n                                strokeWidth=\"2\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                    <div className=\"buy-container\">\n                        <input onFocus={this.handleFocus.bind(this)} onBlur={this.handleFocus.bind(this)} onChange={this.handleChange.bind(this)} className=\"ticker-search-2\" type=\"text\" placeholder=\"Quantity To Buy\" value={this.state.Qty} />\n                        <div className={`calculator-${this.state.calculator}`}>\n                            <div>Price - ${this.props.currPrice}</div>\n                            <div className=\"share-qty\">Shares - <Odometer value={this.state.Qty.length === 0 ? 0 : this.state.Qty} /></div>\n                            <div className=\"total-calc\">Total = $<Odometer value={(this.props.currPrice * this.state.Qty).toFixed(2)} /> </div>\n                        </div>\n                        <button onClick={this.buyStock.bind(this)} className=\"buy-button\">Buy</button>\n\n                    </div>\n                    <div className='errors-container'>{errors}</div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default StockGraph;","import { connect } from 'react-redux';\nimport StockGraph from './stock_graph';\nimport { withRouter } from 'react-router-dom'\nimport { createTransaction } from '../../actions/transaction_action'\n\nconst msp = (state, ownProps) => {\n    return {\n        currentUser: state.session.user,\n        errors: state.errors.transaction\n    };\n};\n\nconst mdp = dispatch => ({\n    createTransaction: transaction => dispatch(createTransaction(transaction))\n});\n\nexport default withRouter(connect(msp, mdp)(StockGraph));\n\n","import React from 'react';\nimport StockGraph from './stock_graph_container'\nimport 'odometer/themes/odometer-theme-default.css';\nimport Odometer from 'react-odometerjs'\nconst Key = { IEXAPIKey: 'sk_d78be1c9c5284c1d83028b0ab25aa5fe' }\n\nclass Cash extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            searchTerm: \"\",\n            result: null,\n            company: null,\n            history: null,\n            price: null,\n            symbol: null\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.getCompanyName = this.getCompanyName.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.currentUser && Object.values(this.props.user).length < 1) {\n            this.props.fetchUser(this.props.currentUser.id)\n        }\n    }\n\n    // This function's job is to fetch the search results given the specified query. (For Live Search)\n    search = async val => {\n        fetch(`https://sandbox.iexapis.com/stable/search/${val}?token=Tsk_536efa1336e94441beb5f27e888e3721`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n\n                this.setState({ result: res });\n            })\n    }\n\n    findCompany = val => {\n        fetch(`https://cloud.iexapis.com/stable/stock/${val}/quote?token=${Key.IEXAPIKey}`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                this.setState({ company: res, price: res.latestPrice, symbol: val });\n\n            })\n        fetch(`https://cloud.iexapis.com/stable/stock/${val}/chart/1m?token=${Key.IEXAPIKey}`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                this.setState({ history: res });\n            })\n    }\n\n    handleChange(e) { // Event listener for any change a search is triggered (API call) \n        if (e.currentTarget.value.length === 0) {\n            this.setState({ result: null })\n        } // if field is empty should clear the results. \n        this.search(e.currentTarget.value);\n        this.setState({ searchTerm: e.currentTarget.value });\n    }\n\n    handleClick(val) { // if the user clicks on one of the results, \n        //  it sets the input value to the company and clears the previous search result.\n        this.setState({ searchTerm: val, result: null })\n        this.findCompany(val)\n    }\n\n    moneyFormat(price, sign = '$') { // formats the user's available funds. \n        const pieces = parseFloat(price).toFixed(2).split('')\n        let ii = pieces.length - 3\n        while ((ii -= 3) > 0) {\n            pieces.splice(ii, 0, ',')\n        }\n        return sign + pieces.join('')\n    }\n\n    getCompanyName = async symbol => {\n        let companyName;\n        await fetch(`https://cloud.iexapis.com/stable/stock/${symbol}/quote?token=${Key.IEXAPIKey}`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                companyName = res.companyName\n            }).then(() => {\n                return companyName\n            })\n\n    }\n\n\n    render() {\n        let companyName;\n        let companyInfo;\n        if (this.state.company) {\n            companyName = this.state.company.companyName\n            companyInfo = <div className=\"abc-dd\">\n                <div className=\"company-name-text\">{companyName}</div>\n\n                <StockGraph data={this.state.history} symbol={this.state.symbol} currPrice={this.state.price} funds={this.props.user.funds} />\n            </div>\n\n        }\n\n\n        let searchResult;\n        if (this.state.result) { // ensures results of search only show when a valid search is applied\n            searchResult = this.state.result.map((company, idx) => {\n                return (\n                    <div onClick={() => this.handleClick(company.symbol)}\n                        className=\"search-result-item\"\n                        key={idx}>\n                        {company.symbol}\n                    </div>\n\n                )\n            })\n        }\n\n        let funds = this.props.user.funds\n        return (\n            <div className=\"cash-container\">\n                <div className=\"cash-available-text\">Available Cash - $<Odometer duration={300} value={funds}></Odometer></div>\n                <form className=\"form-cont\">\n                    <div className=\"input-class\">\n                        <input className=\"ticker-search-1\" type=\"text\" value={this.state.searchTerm} placeholder=\"Search Stock By Ticker\" onChange={e => this.handleChange(e)} />\n                        <div className=\"search-res-cont\">\n                            {searchResult}\n                        </div>\n\n                    </div>\n\n                </form>\n                {companyInfo}\n            </div >\n        )\n    }\n}\n\nexport default Cash;","import * as APIUtil from '../util/users_util';\n\nexport const RECEIVE_USER = \"RECEIVE_USER\";\nexport const REMOVE_USER = \"REMOVE_USER\";\n\nconst receiveUser = (user) => ({\n  type: RECEIVE_USER,\n  user\n});\n\n\nexport const fetchUser = (userId) => dispatch => (\n  APIUtil.fetchUser(userId)\n    .then(user => dispatch(receiveUser(user)))\n);\n\nexport const updateUser = (user) => dispatch => (\n  APIUtil.updateUser(user)\n    .then(user => dispatch(receiveUser(user)))\n);","import axios from \"axios\";\n\n// sign up is defined in session util (users post)\n\nexport const fetchUser = (userId) => {\n  return axios.get(`/api/users/${userId}`);\n};\n\nexport const updateUser = (user) => {\n  return axios.patch(`/api/users/${user.id}`, user);\n};\n\nexport const deleteUser = (userId) => {\n  return axios.delete(`/api/users/${userId}`);\n};","import { connect } from 'react-redux';\nimport Cash from './cash';\nimport { withRouter } from 'react-router-dom'\nimport { fetchUser } from '../../actions/user_actions'\n\nconst msp = (state, ownProps) => {\n    return {\n        user: state.entities.users,\n        currentUser: state.session.user\n    };\n};\n\nconst mdp = dispatch => ({\n    fetchUser: userId => dispatch(fetchUser(userId))\n});\n\nexport default withRouter(connect(msp, mdp)(Cash));\n\n","import React from 'react';\nimport { Link } from \"react-router-dom\"\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n        this.props = props\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n\n\n    render() {\n\n        return (\n            <div className=\"nav-container\">\n                <div id=\"aa\">Welcome! {this.props.currentUser.name}</div>\n                <Link id=\"aa\" className=\"text-4-links\" to=\"/transactions\">Transactions</Link>\n                <Link id=\"aa\" className=\"text-4-links\" to=\"/\">Portfolio</Link>\n                <input id=\"aa\" type=\"submit\" className=\"sign-out\" onClick={this.handleClick} value=\"Sign Out\" />\n            </div>\n\n        )\n    }\n}\n\nexport default NavBar;","import { connect } from 'react-redux';\nimport { logout } from '../../actions/session_actions';\nimport NavBar from '../mainpage/navbar'\nimport { withRouter } from 'react-router-dom'\n\nconst msp = (state, ownProps) => {\n    return {\n        currentUser: state.session.user\n    };\n};\n\nconst mdp = dispatch => ({\n    logout: () => dispatch(logout()),\n});\n\nexport default withRouter(connect(msp, mdp)(NavBar));\n\n\n","import React from 'react';\nimport Portfolio from \"./portfolio_container\"\nimport Cash from \"./cash_container\"\nimport NavBar from '../../components/mainpage/navbar_container'\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n        this.props = props\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n\n\n    render() {\n\n        return (\n            <div className=\"mainpage-container\">\n                <NavBar />\n                <div className=\"mid-container\">\n                    <Portfolio />\n                    <Cash />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainPage;","import { connect } from 'react-redux';\nimport { logout } from '../../actions/session_actions';\nimport MainPage from './mainpage';\nimport { withRouter } from 'react-router-dom'\n\nconst msp = (state, ownProps) => {\n    return {\n        currentUser: state.session.user\n    };\n};\n\nconst mdp = dispatch => ({\n    logout: () => dispatch(logout()),\n});\n\nexport default withRouter(connect(msp, mdp)(MainPage));\n\n\n","import React from 'react';\nimport NavBar from '../mainpage/navbar_container'\n\nclass TransactionPage extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchAllTrans(this.props.currentUser.id).then(() => {\n            this.setState({ allTransactions: this.props.transactions })\n        })\n    }\n\n    render() {\n        let allTransactions;\n        if (this.props.transactions.length > 0) {\n            allTransactions = this.props.transactions.map(transaction => {\n                return (\n                    <div className=\"transaction-detail-text\">\n                        <div>{transaction.transaction_type.toUpperCase()}</div>\n                        <div>({transaction.symbol})</div>\n                        <div> - {transaction.stock_count + \"Shares\"}</div>\n                        <div>{\"@\" + transaction.amount}</div>\n                    </div>\n                )\n            })\n        }\n        return (\n            <div className=\"transactions-container\">\n                <NavBar />\n                <div className=\"transaction-title-text\">Transactions</div>\n                {allTransactions}\n            </div>\n        )\n    }\n}\n\nexport default TransactionPage;","import { connect } from 'react-redux';\nimport TransactionPage from './transactions';\nimport { withRouter } from 'react-router-dom'\nimport { fetchAllTrans } from '../../actions/transaction_action'\n\nconst msp = (state, ownProps) => {\n\n    return {\n        currentUser: state.session.user,\n        transactions: Object.values(state.entities.transactions)\n    };\n};\n\nconst mdp = dispatch => ({\n    fetchAllTrans: userId => dispatch(fetchAllTrans(userId))\n});\n\nexport default withRouter(connect(msp, mdp)(TransactionPage));","import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport SignUp from './sessions/session_page';\nimport SignIn from './sessions/login_form_container';\nimport MainPage from './mainpage/mainpage_container'\nimport TransactionPage from '../components/mainpage/transactions_container'\nconst App = (props) => (\n\n  <div>\n    <ProtectedRoute exact path=\"/\" component={MainPage} loggedIn={props.state().session.isAuthenticated} />\n    <AuthRoute path=\"/signup\" component={SignUp} loggedIn={props.state().session.isAuthenticated} />\n    <AuthRoute path=\"/signin\" component={SignIn} loggedIn={props.state().session.isAuthenticated} />\n    <ProtectedRoute exact path=\"/transactions\" component={TransactionPage} loggedIn={props.state().session.isAuthenticated} />\n  </div>\n\n);\n\nexport default App;","import React from 'react';\nimport App from './app.js'\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nconst Root = (props) => (\n  <Provider store={props.store}>\n    <HashRouter>\n      <App state={props.store.getState}/>\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;\n","import {\n  RECEIVE_USER_LOGOUT,\n  RECEIVE_CURRENT_USER,\n  RECEIVE_USER_SIGN_IN,\n\n} from '../actions/session_actions';\n\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nconst SessionReducer = (state = initialState, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport default SessionReducer;","  \nimport{\n    RECEIVE_SESSION_ERRORS,\n    RECEIVE_CURRENT_USER\n  } from '../actions/session_actions';\n  \n  const _nullErrors = [];\n  \n  const SessionErrorsReducer = (state= _nullErrors, action) => {\n    Object.freeze(state);\n    switch(action.type){\n      case RECEIVE_SESSION_ERRORS:\n        return action.errors;\n      case RECEIVE_CURRENT_USER:\n        return _nullErrors;\n      default:\n        return state;\n    }\n  };\n  \n  export default SessionErrorsReducer;","import {\n\n    RECEIVE_TRANSACTION_ERRORS\n} from '../actions/transaction_action';\n\n\nconst TransactionErrorsReducer = (state = {}, action) => {\n    Object.freeze(state);\n    switch (action.type) {\n        case RECEIVE_TRANSACTION_ERRORS:\n            return action.errors\n\n        default:\n            return state;\n    }\n};\n\nexport default TransactionErrorsReducer;","\nimport { combineReducers } from 'redux';\n\nimport SessionErrorsReducer from './session_errors_reducer';\nimport TransactionErrorsReducer from './transaction_errors_reducer'\n\nconst ErrorsReducer = combineReducers({\n  session: SessionErrorsReducer,\n  transaction: TransactionErrorsReducer\n});\n\nexport default ErrorsReducer;","import { merge } from 'lodash'\n\nimport {\n  RECEIVE_USER,\n} from '../actions/user_actions';\n\nimport {\n  RECEIVE_CURRENT_USER\n} from '../actions/session_actions'\n\nimport {\n  RECEIVE_TRANSACTION\n} from '../actions/transaction_action'\n\nconst UsersReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return merge({}, action.currentUser, state)\n    case RECEIVE_USER:\n      return action.user.data\n    case RECEIVE_TRANSACTION:\n      return action.transaction.data\n    default:\n      return state;\n  }\n};\n\nexport default UsersReducer;","import { merge } from 'lodash'\n\nimport {\n    RECEIVE_TRANSACTIONS,\n    RECEIVE_TRANSACTION\n} from '../actions/transaction_action';\n\nconst TransactionReducer = (state = {}, action) => {\n    Object.freeze(state);\n    switch (action.type) {\n        case RECEIVE_TRANSACTIONS:\n            return merge({}, state, action.transactions.data)\n        case RECEIVE_TRANSACTION:\n            return merge({}, state, { [Object.values(state).length]: action.transaction.data.transaction })\n        default:\n            return state;\n    }\n};\n\nexport default TransactionReducer;","import { combineReducers } from 'redux';\n\nimport UsersReducer from './users_reducer';\nimport TransactionsReducer from './transactions_reducer'\n\nconst EntitiesReducer = combineReducers({\n    users: UsersReducer,\n    transactions: TransactionsReducer\n});\n\nexport default EntitiesReducer;","import { combineReducers } from 'redux';\nimport SessionReducer from './session_reducer';\nimport ErrorsReducer from './errors_reducer';\nimport EntitiesReducer from './entities_reducer';\n\n\nconst RootReducer = combineReducers({\n  entities: EntitiesReducer,\n  session: SessionReducer,\n  errors: ErrorsReducer,\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk, logger)\n  )\n);\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Root from './components/root.js';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_api_util.js';\nimport { logout } from './actions/session_actions';\n\nimport './style/reset.css'\nimport \"./style/main.scss\";\nimport './style/session.scss'\nimport './style/cash.scss'\nimport './style/mainpage.scss'\nimport './style/portfolio.scss'\nimport './style/transactions.scss'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  // if we have a jwtToken, this means we have an encoded user object\n  // in localStorage. This means a user is authenticated, and we should\n  // create a pls to match this and\n\n  if (localStorage.jwtToken) {\n\n    // set common header for axios requests\n    setAuthToken(localStorage.jwtToken);\n\n    // decoded jwtToken will be equal to user object\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n\n    const preloadedState = {\n      session: {\n        isAuthenticated: true,\n        user: decodedUser\n      }\n    };\n\n    store = configureStore(preloadedState);\n\n    const currentTime = Date.now() / 1000;\n\n\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login';\n    }\n  }\n  else {\n    store = configureStore({});\n  }\n\n  const root = document.getElementById('root');\n  ReactDOM.render(<Root store={store} />, root);\n\n  window.axios = axios;\n  window.state = store.getState;\n\n});","module.exports = __webpack_public_path__ + \"static/media/signin_wallpaper.2e94add9.png\";"],"sourceRoot":""}